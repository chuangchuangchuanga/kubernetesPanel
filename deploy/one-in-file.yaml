apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-panel
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-panel
  template:
    metadata:
      labels:
        app: k8s-panel
    spec:
      serviceAccountName: k8s-panel-sa
      containers:
        - name: k8s-panel-pod
          image: wangchuang/k8spanel:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: "100Mi"
              cpu: "50m"
            requests:
              memory: "100Mi"
              cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name:  k8s-panel-svc
  namespace: kube-system
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: k8s-panel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-panel-sa
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-k8s-panel-role
rules:
  - apiGroups: [""]
    resources: ["pods","namespaces","pods/log"]
    verbs: ["get", "list", "watch", "update","patch"]
  - apiGroups: ["apps"]
    resources: [ "deployments" ]
    verbs: [ "get", "list", "watch", "update","patch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-k8sPanel-binding
subjects:
  - kind: ServiceAccount
    name: k8s-panel-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cluster-k8s-panel-role
  apiGroup: rbac.authorization.k8s.io
